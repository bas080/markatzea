#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long qw(:config auto_help);
use IPC::Open2 qw(open2);
use File::Temp qw(tempfile);

=head1 NAME

markatzea - evaluate your markdown code blocks

=head1 SYNOPSIS

markatzea <file>

=head1 DESCRIPTION

B<markatzea> is a tool which takes markdown, evaluates code blocks with
interpreters and prints the output of those processes to a different codeblock.

=cut

while (my $line = <>) {
    unless ($line =~ /^```\w*(\|\w*)? \w*/) {
        print $line;
        next;
    }

    my ($lang, $out_lang, $command) = ($line =~ /^```(\w*)(\|\w*)? (.*)/);
    if (defined $lang) {
        print "```$lang\n";
    }

    $out_lang = $out_lang ? substr($out_lang, 1) : "";

    next unless $command;

    my ($in, $out, $pid) = eval_code_block($command);

    # Write to the process
    while ($line = <>) {
        print $line;

        last if $line =~ /^```/;

        print $in $line;
    }

    close($in);

    print_evaluated_code_block($out, $lang, $out_lang);

    waitpid($pid, 0);
    my $exit_status = $? >> 8;
    exit $exit_status if $exit_status != 0;
}

sub eval_code_block {
    my ($command) = @_;

    my $pid = open2(my ($out), my ($in), $command)
      or die "Failed to open subprocess: $!";

    return ($in, $out, $pid);
}

sub print_evaluated_code_block {
    my ($out, $lang, $out_lang) = @_;

    return if eof $out;

    print "```$out_lang\n";

    while (my $line = <$out>) {
        print $line;
    }

    print "```\n";
}
