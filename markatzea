#!/usr/bin/env perl

use warnings;
use strict;
use IPC::Open2;
use List::Util qw(max);
use List::MoreUtils qw(pairwise);
use Getopt::Long 2.49 qw(:config auto_help);
use File::Temp qw(tempfile);

=head1 NAME

markatzea - evaluate your markdown code blocks

=head1 SYNOPSIS

markatzea <file>

=head1 DESCRIPTION

B<markatzea> is a tool which takes markdown, evaluates code blocks with
interpreters and prints the output of those processes to a different codeblock.

=cut

while (my $line = <>) {
  my @parts;
  my $output;
  my $in;
  my $out;
  my $pid;
  my $comm;

  print $line;

  if ($line =~ /^```/) {
    @parts = split(/\s+/, $line, 2);
    $parts[1] =~ s/\s+$//;

    if ($parts[1] eq "") {
      next;
    }

    $pid = open2($out, $in, $parts[1]);

    while ($line = <>) {
      print $line;

      if ($line =~ /^```/) {
        close($in);
        last;
      }

      print $in $line;
    }

    # Do not print output if it is empty.
    if (not eof $out) {
      print "```\n";
      while ($line = <$out>) {
        print $line;
      }
      print "```\n";
    }

    # Wait for process to finish.
    waitpid( $pid, 0 );
    my $child_exit_status = $? >> 8;

    # Exit if a script exits with non zero code.
    if ($child_exit_status ne 0) {
      print "$parts[1] exited with code $child_exit_status\n";
      exit $child_exit_status;
    }
  }
}
